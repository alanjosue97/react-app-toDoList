{"version":3,"sources":["componets/form.js","componets/Todo.js","componets/toDolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputTexts","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","console","log","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","inputTexts","status","setFilterTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaced101.chunk.js","sourcesContent":["import React from \"react\";\n\n//component Form\nconst Form = ({ setInputTexts, todos, setTodos, inputText, setStatus }) => {\n  const inputTextHandler = (e) => {\n    // console.log(e.target.value);\n    //  props.setInputTexts\n    setInputTexts(e.target.value);\n  };\n\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      { text: inputText, completed: false, id: Math.random() * 1000 },\n    ]);\n    setInputTexts(\"\");\n    console.log({ todos });\n  };\n  const statusHandler = (e) =>{\n    setStatus(e.target.value)\n  }\n  return (\n    <div>\n      <form>\n        <input\n          value={inputText}\n          onChange={inputTextHandler}\n          type=\"text\"\n          className=\"todo-input\"\n        />\n        <button\n          onClick={submitTodoHandler}\n          className=\"todo-button\"\n          type=\"submit\"\n        >\n          <i className=\"fas fa-puls-square\">+</i>\n        </button>\n        <div className=\"select\">\n          <select  onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n          </select>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Todo = ({ text, todos, setTodos, todo }) => {\n  //events\n  const deletHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id));\n    console.log(todo);\n  };\n\n  const completeHandler = () => {\n    setTodos(\n      todos.map(item => {\n        if (item.id === todo.id) {\n          return { ...item, completed: !item.completed };\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\n        {text}\n      </li>\n      <button onClick={completeHandler} className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deletHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\n\n\n//import componets\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n  console.log(todos);\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => (\n          <Todo\n            key={todo.id}\n            text={todo.text}\n            setTodos={setTodos}\n            todos={todos}\n            todo={todo}\n          />\n        ))}\n      </ul>\n      \n    </div>\n  );\n};\n\nexport default TodoList;\n","import \"./App.css\";\nimport Form from \"./componets/form\";\nimport TodoList from \"./componets/toDolist\";\nimport { useState, useEffect } from \"react\";\n\n\nfunction App() {\n  const [inputTexts, setInputTexts] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilterTodos] = useState([]);\n\n  //run once when the app start\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n\n  //useEffect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  },[todos, status]);\n\n  //function\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilterTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilterTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilterTodos(todos);\n        break;\n    }\n  };\n  //save to local\n  const saveLocalTodos = () => {\n     localStorage.setItem('todos', JSON.stringify(todos));\n    \n  }\nconst getLocalTodos = () => {\n  if(localStorage.getItem('todos') === null){\n    localStorage.setItem('todos', JSON.stringify([]));\n  }else {\n  let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n    setTodos(todoLocal)\n}\n}\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>APP ToDo List</h1>\n      </header>\n      <Form\n        inputText={inputTexts}\n        todos={todos}\n        setTodos={setTodos}\n        setInputTexts={setInputTexts}\n        setStatus={setStatus}\n      />\n      <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}